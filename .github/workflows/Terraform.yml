name: Terraform Apply

on:
  push:
    branches:
      - test
  pull_request:
    types: [closed]
    branches:
      - production

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        environment: [test, production]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.5

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/test' || github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'production'
        run: terraform apply -auto-approve

# name: 'Terraform'

# on:
#   push:
#     branches:
#       - 'test'
#   pull_request:
#     types: [closed]
#     branches:
#       - 'production'

# jobs:
#   prodTerraform:
#     name: terraform in production
#     runs-on: ubuntu-latest
#     if: github.event.pull_request.base.ref == 'production'
#     env:
#       ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
#       ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
#       ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#       ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
#     environment: production
#     defaults:
#       run:
#         shell: bash
    
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2 

#     - name: 'Terraform Format'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'fmt'
#         tf_actions_working_dir: "./terraform"
        
#     - name: 'Terraform Init'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'init'
#         tf_actions_working_dir: "./terraform"

#     - name: 'Terraform Validate'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'validate'
#         tf_actions_working_dir: "./terraform"
        
#     - name: 'Terraform Plan'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'plan'
#         tf_actions_working_dir: "./terraform"

#     - name: Terraform Apply
#       if: github.ref == 'refs/heads/test' || github.ref == 'refs/heads/production'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'apply'
#         tf_actions_working_dir: "./terraform"
  
#   testTerraform:
#     name: terraform in test
#     runs-on: ubuntu-latest
#     if: github.event.repository.default_branch == 'test'
#     env:
#       ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
#       ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
#       ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#       ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
#     environment: test
#     defaults:
#       run:
#         shell: bash
    
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2 

#     - name: 'Terraform Format'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'fmt'
#         tf_actions_working_dir: "./terraform"
        
#     - name: 'Terraform Init'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'init'
#         tf_actions_working_dir: "./terraform"

#     - name: 'Terraform Validate'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'validate'
#         tf_actions_working_dir: "./terraform"
        
#     - name: 'Terraform Plan'
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'plan'
#         tf_actions_working_dir: "./terraform"

#     - name: Terraform Apply
#       uses: hashicorp/terraform-github-actions@master
#       with:
#         tf_actions_version: 1.7.5
#         tf_actions_subcommand: 'apply'
#         tf_actions_working_dir: "./terraform"


  # terraform:
  #   name: 'Terraform'
  #   env:
  #     ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  #     ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #     ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
  #   runs-on: ubuntu-latest
    # environment: ${{github.ref}}
    # environment: ${{github.event.pull_request.base.ref }}
    # if: github.event.pull_request.merged && github.event.pull_request.base.ref == 'production' 
    
    # defaults:
    #   run:
    #     shell: bash

    # steps:
    # - name: Checkout
    #   uses: actions/checkout@v2 

    # - name: 'Terraform Format'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 1.7.5
    #     tf_actions_subcommand: 'fmt'
    #     tf_actions_working_dir: "./terraform"
        
    # - name: 'Terraform Init'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 1.7.5
    #     tf_actions_subcommand: 'init'
    #     tf_actions_working_dir: "./terraform"

    # - name: 'Terraform Validate'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 1.7.5
    #     tf_actions_subcommand: 'validate'
    #     tf_actions_working_dir: "./terraform"
        
    # - name: 'Terraform Plan'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 1.7.5
    #     tf_actions_subcommand: 'plan'
    #     tf_actions_working_dir: "./terraform"

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/test' || github.ref == 'refs/heads/production'
    #   uses: hashicorp/terraform-github-actions@master
    #   with:
    #     tf_actions_version: 1.7.5
    #     tf_actions_subcommand: 'apply'
    #     tf_actions_working_dir: "./terraform"